version: '3.8'

services:
  server:
    image: blog-app-backend
    container_name: blog-app-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 3004:3003
        #environment:
      #      PORT: 3003
      #      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      #      REDIS_URL: //redis:6379
    command: yarn start
    volumes:
      - ./backend:/usr/scr/app

  app:
    image: blog-app-frontend
    container_name: blog-app-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - 5000:80

      #  mongo:
      #    image: mongo
      #    ports:
      #      - 3456:27017
      #    environment:
      #      MONGO_INITDB_ROOT_USERNAME: root
      #      MONGO_INITDB_ROOT_PASSWORD: example
      #      MONGO_INITDB_DATABASE: the_database
      #    volumes:
      #      - ./blog-app-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      #      - ./blog-app-backend/mongo_data:/data/db
      #  redis:
      #    image: redis
      #    ports:
      #      - 6379:6379
      #    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
      #    volumes: # Declare the volume
      #      - ./blog-app-backend/redis_data:/data

  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: blog-app-reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
